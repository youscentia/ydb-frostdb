// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: frostdb/table/v1alpha1/config.proto

package tablev1alpha1

import (
	v1alpha1 "github.com/youscentia/ydb-frostdb/gen/proto/go/frostdb/schema/v1alpha1"
	v1alpha2 "github.com/youscentia/ydb-frostdb/gen/proto/go/frostdb/schema/v1alpha2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TableConfig is the configuration information for a table.
type TableConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Schema of the table.
	//
	// Types that are assignable to Schema:
	//
	//	*TableConfig_DeprecatedSchema
	//	*TableConfig_SchemaV2
	Schema isTableConfig_Schema `protobuf_oneof:"schema"`
	// RowGroupSize is the size in rows of row groups that are written to Parquet files.
	RowGroupSize uint64 `protobuf:"varint,3,opt,name=row_group_size,json=rowGroupSize,proto3" json:"row_group_size,omitempty"`
	// BlockReaderLimit is the concurrency limit of the number of Go routines spawned when reading storage blocks.
	BlockReaderLimit uint64 `protobuf:"varint,4,opt,name=block_reader_limit,json=blockReaderLimit,proto3" json:"block_reader_limit,omitempty"`
	// DisableWal disables the write ahead log for this table.
	DisableWal bool `protobuf:"varint,5,opt,name=disable_wal,json=disableWal,proto3" json:"disable_wal,omitempty"`
}

func (x *TableConfig) Reset() {
	*x = TableConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frostdb_table_v1alpha1_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableConfig) ProtoMessage() {}

func (x *TableConfig) ProtoReflect() protoreflect.Message {
	mi := &file_frostdb_table_v1alpha1_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableConfig.ProtoReflect.Descriptor instead.
func (*TableConfig) Descriptor() ([]byte, []int) {
	return file_frostdb_table_v1alpha1_config_proto_rawDescGZIP(), []int{0}
}

func (m *TableConfig) GetSchema() isTableConfig_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *TableConfig) GetDeprecatedSchema() *v1alpha1.Schema {
	if x, ok := x.GetSchema().(*TableConfig_DeprecatedSchema); ok {
		return x.DeprecatedSchema
	}
	return nil
}

func (x *TableConfig) GetSchemaV2() *v1alpha2.Schema {
	if x, ok := x.GetSchema().(*TableConfig_SchemaV2); ok {
		return x.SchemaV2
	}
	return nil
}

func (x *TableConfig) GetRowGroupSize() uint64 {
	if x != nil {
		return x.RowGroupSize
	}
	return 0
}

func (x *TableConfig) GetBlockReaderLimit() uint64 {
	if x != nil {
		return x.BlockReaderLimit
	}
	return 0
}

func (x *TableConfig) GetDisableWal() bool {
	if x != nil {
		return x.DisableWal
	}
	return false
}

type isTableConfig_Schema interface {
	isTableConfig_Schema()
}

type TableConfig_DeprecatedSchema struct {
	// Deprecated schema definition. Used for backwards compatibility.
	DeprecatedSchema *v1alpha1.Schema `protobuf:"bytes,1,opt,name=deprecated_schema,json=deprecatedSchema,proto3,oneof"`
}

type TableConfig_SchemaV2 struct {
	// Schema of the table. Use this field.
	SchemaV2 *v1alpha2.Schema `protobuf:"bytes,2,opt,name=schema_v2,json=schemaV2,proto3,oneof"`
}

func (*TableConfig_DeprecatedSchema) isTableConfig_Schema() {}

func (*TableConfig_SchemaV2) isTableConfig_Schema() {}

var File_frostdb_table_v1alpha1_config_proto protoreflect.FileDescriptor

var file_frostdb_table_v1alpha1_config_proto_rawDesc = []byte{
	0x0a, 0x23, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2e, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x24, 0x66,
	0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x02, 0x0a, 0x0b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4e, 0x0a, 0x11, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x10, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x5f, 0x76, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x6f, 0x77,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x42, 0x08,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0xf6, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d,
	0x2e, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x2f,
	0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x54, 0x58, 0xaa,
	0x02, 0x16, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x16, 0x46, 0x72, 0x6f, 0x73, 0x74,
	0x64, 0x62, 0x5c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xe2, 0x02, 0x22, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62, 0x5c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x46, 0x72, 0x6f, 0x73, 0x74, 0x64, 0x62,
	0x3a, 0x3a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frostdb_table_v1alpha1_config_proto_rawDescOnce sync.Once
	file_frostdb_table_v1alpha1_config_proto_rawDescData = file_frostdb_table_v1alpha1_config_proto_rawDesc
)

func file_frostdb_table_v1alpha1_config_proto_rawDescGZIP() []byte {
	file_frostdb_table_v1alpha1_config_proto_rawDescOnce.Do(func() {
		file_frostdb_table_v1alpha1_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_frostdb_table_v1alpha1_config_proto_rawDescData)
	})
	return file_frostdb_table_v1alpha1_config_proto_rawDescData
}

var file_frostdb_table_v1alpha1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_frostdb_table_v1alpha1_config_proto_goTypes = []any{
	(*TableConfig)(nil),     // 0: frostdb.table.v1alpha1.TableConfig
	(*v1alpha1.Schema)(nil), // 1: frostdb.schema.v1alpha1.Schema
	(*v1alpha2.Schema)(nil), // 2: frostdb.schema.v1alpha2.Schema
}
var file_frostdb_table_v1alpha1_config_proto_depIdxs = []int32{
	1, // 0: frostdb.table.v1alpha1.TableConfig.deprecated_schema:type_name -> frostdb.schema.v1alpha1.Schema
	2, // 1: frostdb.table.v1alpha1.TableConfig.schema_v2:type_name -> frostdb.schema.v1alpha2.Schema
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_frostdb_table_v1alpha1_config_proto_init() }
func file_frostdb_table_v1alpha1_config_proto_init() {
	if File_frostdb_table_v1alpha1_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frostdb_table_v1alpha1_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TableConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_frostdb_table_v1alpha1_config_proto_msgTypes[0].OneofWrappers = []any{
		(*TableConfig_DeprecatedSchema)(nil),
		(*TableConfig_SchemaV2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frostdb_table_v1alpha1_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frostdb_table_v1alpha1_config_proto_goTypes,
		DependencyIndexes: file_frostdb_table_v1alpha1_config_proto_depIdxs,
		MessageInfos:      file_frostdb_table_v1alpha1_config_proto_msgTypes,
	}.Build()
	File_frostdb_table_v1alpha1_config_proto = out.File
	file_frostdb_table_v1alpha1_config_proto_rawDesc = nil
	file_frostdb_table_v1alpha1_config_proto_goTypes = nil
	file_frostdb_table_v1alpha1_config_proto_depIdxs = nil
}
